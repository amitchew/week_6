{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ragna\\\\Documents\\\\dev\\\\10Academy\\\\week_6\\\\FrontEnd\\\\rag_chatbot\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Message from \"./components/Message\";\nimport Input from \"./components/Input\";\nimport History from \"./components/History\";\nimport Clear from \"./components/Clear\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [history, setHistory] = useState([]);\n  const handleSubmit = async () => {\n    const prompt = {\n      role: \"user\",\n      content: input\n    };\n    setMessages([...messages, prompt]);\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \".concat(process.env.REACT_APP_OPENAI_API_KEY),\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        model: \"gpt-3.5-turbo\",\n        messages: [...messages, prompt]\n      })\n    }).then(data => data.json()).then(data => {\n      console.log(data);\n      // const res = data.choices[0].message.content;\n      // setMessages((messages) => [\n      //   ...messages,\n      //   {\n      //     role: \"assistant\",\n      //     content: res\n      //   }\n      // ]);\n      // setHistory((history) => [...history, { question: input, answer: res }]);\n      // setInput(\"\");\n    });\n  };\n  const clear = () => {\n    setMessages([]);\n    setHistory([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"PromptlyTech RAG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: messages.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(Message, {\n            role: el.role,\n            content: el.content\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 20\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onClick: input ? handleSubmit : undefined\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Column\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Accuracy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"Title\",\n        children: \"Classification\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Content\",\n        children: history.map((el, i) => {\n          return /*#__PURE__*/_jsxDEV(History, {\n            question: el.question,\n            onClick: () => setMessages([{\n              role: \"user\",\n              content: history[i].question\n            }, {\n              role: \"assistant\",\n              content: history[i].answer\n            }])\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Clear, {\n        onClick: clear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"WJ+PR8KKBtOLBOf8DqDAM2H2PfM=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Message","Input","History","Clear","jsxDEV","_jsxDEV","App","_s","input","setInput","messages","setMessages","history","setHistory","handleSubmit","prompt","role","content","fetch","method","headers","Authorization","concat","process","env","REACT_APP_OPENAI_API_KEY","body","JSON","stringify","model","then","data","json","console","log","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","el","i","value","onChange","e","target","onClick","undefined","question","answer","_c","$RefreshReg$"],"sources":["C:/Users/ragna/Documents/dev/10Academy/week_6/FrontEnd/rag_chatbot/src/App.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nimport Message from \"./components/Message\";\r\nimport Input from \"./components/Input\";\r\nimport History from \"./components/History\";\r\nimport Clear from \"./components/Clear\";\r\n\r\nimport \"./App.css\";\r\n\r\nexport default function App() {\r\n  const [input, setInput] = useState(\"\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [history, setHistory] = useState([]);\r\n\r\n  const handleSubmit = async () => {\r\n    const prompt = {\r\n      role: \"user\",\r\n      content: input\r\n    };\r\n\r\n    setMessages([...messages, prompt]);\r\n\r\n    await fetch(\"https://api.openai.com/v1/chat/completions\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        Authorization: `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`,\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({\r\n        model: \"gpt-3.5-turbo\",\r\n        messages: [...messages, prompt]\r\n      })\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        // const res = data.choices[0].message.content;\r\n        // setMessages((messages) => [\r\n        //   ...messages,\r\n        //   {\r\n        //     role: \"assistant\",\r\n        //     content: res\r\n        //   }\r\n        // ]);\r\n        // setHistory((history) => [...history, { question: input, answer: res }]);\r\n        // setInput(\"\");\r\n      });\r\n  };\r\n\r\n  const clear = () => {\r\n    setMessages([]);\r\n    setHistory([]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"Column\">\r\n        <h3 className=\"Title\">PromptlyTech RAG</h3>\r\n        <div className=\"Content\">\r\n          {messages.map((el, i) => {\r\n            return <Message key={i} role={el.role} content={el.content} />;\r\n          })}\r\n        </div>\r\n        <Input\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onClick={input ? handleSubmit : undefined}\r\n        />\r\n      </div>\r\n      <div className=\"Column\">\r\n        {/* <h3 className=\"Title\">History</h3> */}\r\n        <h3 className=\"Title\">Accuracy</h3>\r\n\r\n        <h3 className=\"Title\">Classification</h3>\r\n\r\n\r\n\r\n\r\n        <div className=\"Content\">\r\n          {history.map((el, i) => {\r\n            return (\r\n              <History\r\n                key={i}\r\n                question={el.question}\r\n                onClick={() =>\r\n                  setMessages([\r\n                    { role: \"user\", content: history[i].question },\r\n                    { role: \"assistant\", content: history[i].answer }\r\n                  ])\r\n                }\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <Clear onClick={clear} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}